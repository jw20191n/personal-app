[{"/Users/Jiayi/projects/React/personal-app/src/index.js":"1","/Users/Jiayi/projects/React/personal-app/src/router/index.js":"2","/Users/Jiayi/projects/React/personal-app/src/App.js":"3","/Users/Jiayi/projects/React/personal-app/src/pages/Home/index.js":"4","/Users/Jiayi/projects/React/personal-app/src/pages/Register/index.js":"5","/Users/Jiayi/projects/React/personal-app/src/pages/Login/index.js":"6","/Users/Jiayi/projects/React/personal-app/src/components/InputItem/index.js":"7","/Users/Jiayi/projects/React/personal-app/src/components/SubmitButton/index.js":"8"},{"size":181,"mtime":1609272568260,"results":"9","hashOfConfig":"10"},{"size":721,"mtime":1609289374231,"results":"11","hashOfConfig":"10"},{"size":230,"mtime":1609272103793,"results":"12","hashOfConfig":"10"},{"size":136,"mtime":1608683173083,"results":"13","hashOfConfig":"10"},{"size":148,"mtime":1608683673160,"results":"14","hashOfConfig":"10"},{"size":3331,"mtime":1609281347361,"results":"15","hashOfConfig":"10"},{"size":2068,"mtime":1609283587741,"results":"16","hashOfConfig":"10"},{"size":406,"mtime":1609279994611,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"8em6oc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Jiayi/projects/React/personal-app/src/index.js",[],["36","37"],"/Users/Jiayi/projects/React/personal-app/src/router/index.js",[],"/Users/Jiayi/projects/React/personal-app/src/App.js",[],"/Users/Jiayi/projects/React/personal-app/src/pages/Home/index.js",[],"/Users/Jiayi/projects/React/personal-app/src/pages/Register/index.js",[],"/Users/Jiayi/projects/React/personal-app/src/pages/Login/index.js",[],"/Users/Jiayi/projects/React/personal-app/src/components/InputItem/index.js",["38","39"],"import { Input, Form, Button, Row, Col, message } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport styles from './index.module.less';\n\nconst InputItem = (props) => {\n    const { name, rules, ...rest } = props; \n    const [isCountingDown, setCountDown] = useState(false); //if the timer is running\n    const [count, setCount] = useState(props.countDown || 60);//time left in count down timer\n\n\n    const handleClickCaptcha = () => {\n        message.success('Verification successfully sent');\n        setCountDown(true);\n    }\n\n    //monitor the change of state of the 'isCountingDown'\n    useEffect(() => {\n        let interval = 0;\n        if(isCountingDown){\n            interval = window.setInterval( () => {\n                setCount((preSec) => {\n                    if( preSec <= 1){\n                        setCountDown(false);//count down is over\n                        clearInterval(interval);\n                        return props.countDown || 60;\n                    }\n                    return preSec - 1;\n                })\n            }, 1000);\n        }\n        return () => clearInterval(interval);\n    }, [isCountingDown])\n\n\n    if(name === 'captcha'){\n        return(\n            <Form.Item name={name} rules={rules}>\n                <Row gutter={8}>\n                    <Col span={16}>\n                        <Input {...rest}/>\n                    </Col>\n                    <Col span={8}>\n                        <Button \n                            className={styles.getCaptcha} \n                            disabled={isCountingDown}\n                            size=\"large\"\n                            onClick={handleClickCaptcha}\n                            >\n                                { isCountingDown ? 'XX seconds' : 'Send Code'}\n                            </Button>\n                    </Col>\n                </Row>\n            </Form.Item> \n        )\n    }\n\n    return(\n        <Form.Item name={name} rules={rules}>\n            <Input {...rest}/>\n        </Form.Item>\n       \n    )\n}\n\nexport default InputItem;","/Users/Jiayi/projects/React/personal-app/src/components/SubmitButton/index.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":8,"column":12,"nodeType":"46","messageId":"47","endLine":8,"endColumn":17},{"ruleId":"48","severity":1,"message":"49","line":32,"column":8,"nodeType":"50","endLine":32,"endColumn":24,"suggestions":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'count' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.countDown'. Either include it or remove the dependency array. If 'setCount' needs the current value of 'props.countDown', you can also switch to useReducer instead of useState and read 'props.countDown' in the reducer.","ArrayExpression",["54"],"no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [isCountingDown, props.countDown]",{"range":"57","text":"58"},[1144,1160],"[isCountingDown, props.countDown]"]