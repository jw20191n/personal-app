[{"/Users/Jiayi/projects/React/personal-app/src/index.js":"1","/Users/Jiayi/projects/React/personal-app/src/router/index.js":"2","/Users/Jiayi/projects/React/personal-app/src/App.js":"3","/Users/Jiayi/projects/React/personal-app/src/pages/Home/index.js":"4","/Users/Jiayi/projects/React/personal-app/src/pages/Register/index.js":"5","/Users/Jiayi/projects/React/personal-app/src/pages/Login/index.js":"6","/Users/Jiayi/projects/React/personal-app/src/components/InputItem/index.js":"7","/Users/Jiayi/projects/React/personal-app/src/components/SubmitButton/index.js":"8","/Users/Jiayi/projects/React/personal-app/src/pages/Home/components/Articles/index.js":"9","/Users/Jiayi/projects/React/personal-app/src/pages/Home/components/Applications/index.js":"10","/Users/Jiayi/projects/React/personal-app/src/pages/Home/components/Projects/index.js":"11","/Users/Jiayi/projects/React/personal-app/src/pages/Home/data.js":"12","/Users/Jiayi/projects/React/personal-app/src/pages/Home/components/TagList/index.js":"13","/Users/Jiayi/projects/React/personal-app/src/pages/Home/components/ArticleListContent/index.js":"14","/Users/Jiayi/projects/React/personal-app/src/reducers/index.js":"15","/Users/Jiayi/projects/React/personal-app/src/utils/ajax.js":"16","/Users/Jiayi/projects/React/personal-app/src/constants/index.js":"17","/Users/Jiayi/projects/React/personal-app/src/utils/interceptors.js":"18"},{"size":526,"mtime":1610227575317,"results":"19","hashOfConfig":"20"},{"size":904,"mtime":1609290038713,"results":"21","hashOfConfig":"20"},{"size":230,"mtime":1609272103793,"results":"22","hashOfConfig":"20"},{"size":4313,"mtime":1609897341373,"results":"23","hashOfConfig":"20"},{"size":8269,"mtime":1610230430518,"results":"24","hashOfConfig":"20"},{"size":4364,"mtime":1609979949016,"results":"25","hashOfConfig":"20"},{"size":2483,"mtime":1610230379023,"results":"26","hashOfConfig":"20"},{"size":406,"mtime":1609279994611,"results":"27","hashOfConfig":"20"},{"size":1684,"mtime":1609623288628,"results":"28","hashOfConfig":"20"},{"size":3392,"mtime":1609896528579,"results":"29","hashOfConfig":"20"},{"size":818,"mtime":1609897659102,"results":"30","hashOfConfig":"20"},{"size":6658,"mtime":1609623506445,"results":"31","hashOfConfig":"20"},{"size":1867,"mtime":1609620601421,"results":"32","hashOfConfig":"20"},{"size":541,"mtime":1609624057638,"results":"33","hashOfConfig":"20"},{"size":113,"mtime":1609898254404,"results":"34","hashOfConfig":"20"},{"size":722,"mtime":1610229689120,"results":"35","hashOfConfig":"20"},{"size":172,"mtime":1610230225901,"results":"36","hashOfConfig":"20"},{"size":1207,"mtime":1610229479930,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8em6oc",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Jiayi/projects/React/personal-app/src/index.js",[],"/Users/Jiayi/projects/React/personal-app/src/router/index.js",[],"/Users/Jiayi/projects/React/personal-app/src/App.js",[],["78","79"],"/Users/Jiayi/projects/React/personal-app/src/pages/Home/index.js",[],"/Users/Jiayi/projects/React/personal-app/src/pages/Register/index.js",["80","81"],"import React, { useState } from 'react';\nimport {  Form, Popover, Progress, Select, Row, Col } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'redux-react-hook';\nimport InputItem from '../../components/InputItem';\nimport SubmitButton from '../../components/SubmitButton';\nimport styles from './index.module.less';\nimport { formatCountdown } from 'antd/lib/statistic/utils';\nimport { getCaptcha, register } from '../../actions/accounts';\n\nconst { Option } = Select;\n\nconst passwordStatusMap = {\n    ok: (\n        <div className={styles.success}>\n            Security: strong\n        </div>\n    ),\n    pass: (\n        <div className={styles.success}>\n            Security: medium\n        </div>\n    ),\n    poor: (\n        <div className={styles.success}>\n            Security: weak\n        </div>\n    ), \n}\n\nconst passwordProgressMap = {\n    ok: 'success',\n    pass: 'normal',\n    poor: 'exception',\n}\n\nconst Register = () => {\n    const dispatch = useDispatch();\n    const [visible, setVisible] = useState(false);\n    const [form] = Form.useForm();\n    const [popover, setPopover] = useState(false);\n    const [prefix, setPrefix] = useState('+1');\n    // const handleFinish = (values) => {\n    //     dispatch(register(values));\n    // }\n\n    const renderPasswordProgress = () =>{\n        const value = form.getFieldValue('password');\n        const passwordStatus = getPasswordStatus();\n        return value && value.length ? (\n            <div className={styles[`progess-${passwordStatus}`]}>\n                <Progress \n                    status={passwordProgressMap[passwordStatus]}\n                    className={styles.progress}\n                    strokeWidth={6}\n                    percent={value.length * 10 > 100 ? 100 : value.length * 10}\n                    showInfo={false}\n                />\n            </div>\n        ) : null;\n    };\n\n    const getPasswordStatus = () => {\n        const value = form.getFieldValue('password');\n        if(value && value.length > 9){\n            return 'ok';\n        }\n        if(value && value.length > 5){\n            return 'pass';\n        }\n        return 'poor';\n    };\n\n    const checkPassword = (_, value) => {\n        const promise = Promise;\n        if (!value){\n            setVisible(!!value);\n            return promise.reject('Please enter password!');\n        }\n        if(!visible){\n            setVisible(!!value);\n        }\n        setPopover(!popover);//更新进度条，让组件不断重新渲染\n        if(value && form.getFieldValue('confirm')){\n            form.validateFields(['confirm']);\n        }\n        return promise.resolve();\n    };\n\n    const checkConfirm = (_, value) => {\n        const promise = Promise;\n        if (value && value !== form.getFieldValue('password')){\n            return promise.reject('password does not match');\n        }\n        return promise.resolve();\n    };\n\n    const handleClickCaptcha = () => {\n        form.validateFields(['username', 'email', 'password'])\n            .then(()=>{\n                console.log(form.getFieldsValue(['username', 'email', 'password']));\n                dispatch(getCaptcha());\n            });\n    }\n\n    return(\n        <div className={styles.registerContainer}>\n            <div className={styles.register}>\n                <Form form={form}>\n                    <InputItem\n                        name=\"username\"\n                        placeholder=\"用户名\"\n                        size=\"large\"\n                        rules={[\n                        {\n                            required: true,\n                            message: '请输入用户名！'\n                        }\n                        ]}\n                    />\n                    <InputItem\n                        name=\"email\"\n                        placeholder=\"邮箱\"\n                        size=\"large\"\n                        rules={[\n                        {\n                            required: true,\n                            message: '请输入邮箱！'\n                        },\n                        {\n                            type: 'email',\n                            message: '请填写正确的邮箱格式！'\n                        },\n                        ]}\n                    />\n                    <Popover\n                        content={\n                            visible && (\n                                <div>\n                                    {passwordStatusMap[getPasswordStatus()]}\n                                    {renderPasswordProgress()}\n                                    <div>\n                                        请至少输入 6 个字符。请不要使用容易被猜到的密码。\n                                    </div>\n                                </div>\n                            )\n                        }\n                        overlayStyle={{ width: 240 }}\n                        placement=\"right\"\n                        visible={visible}\n                    >\n                        <InputItem\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"至少6位密码，区分大小写\"\n                            size=\"large\"\n                            rules={[\n                                {\n                                validator: checkPassword,\n                                }\n                            ]}\n                        />\n                    </Popover>\n                    <InputItem\n                        name=\"confirm\"\n                        type=\"password\"\n                        placeholder=\"确认密码\"\n                        size=\"large\"\n                        rules={[\n                        {\n                            required: true,\n                            message: '请确认密码!'\n                        },\n                        {\n                            validator: checkConfirm,\n                        }\n                        ]}\n                    />\n                    <Row>\n                        <Col span={6}>\n                        <Select\n                            size=\"large\"\n                            value={prefix}\n                            onChange={(value) => setPrefix(value)}\n                            style={{ width: '100%' }}\n                        >\n                            <Option value=\"86\">+86</Option>\n                            <Option value=\"87\">+87</Option>\n                        </Select>\n                        </Col>\n                        <Col span={18}>\n                        <InputItem\n                            name=\"mobile\"\n                            placeholder=\"手机号\"\n                            size=\"large\"\n                            rules={[\n                            {\n                                required: true,\n                                message: '请输入手机号！'\n                            },\n                            {\n                                pattern: /^\\d{10}$/,\n                                message: '手机号格式错误！'\n                            }\n                            ]}\n                        />\n                        </Col>\n                    </Row>\n                    <InputItem\n                        name=\"captcha\"\n                        size=\"large\"\n                        rules={[\n                            {\n                                required: true,\n                                message: '请输入验证码'\n                            }\n                        ]}\n                        placeholder=\"验证码\"\n                        onClick={handleClickCaptcha}\n                    />\n                    <Row justify=\"space-between\" align=\"middle\">\n                        <Col span={8}>\n                        <SubmitButton>注册</SubmitButton>\n                        </Col>\n                        <Col span={16}>\n                        <Link className={styles.login} to=\"/login\">\n                            使用已有账户登录\n                        </Link>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default Register;","/Users/Jiayi/projects/React/personal-app/src/pages/Login/index.js",["82"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Form, Row, Checkbox } from 'antd';\nimport { UserOutlined, LockTwoTone, MobileTwoTone, MailTwoTone,AlipayCircleOutlined, TaobaoCircleOutlined, WeiboCircleOutlined } from '@ant-design/icons';\nimport InputItem from '../../components/InputItem';\nimport SubmitButton from '../../components/SubmitButton';\nimport styles from './index.module.less';\n\nconst { TabPane } = Tabs;\n\nconst Login = () => {\n    const [autoLogin, setAutoLogin] = useState(true);\n    const [form] = Form.useForm();\n    const handleFinish = (values) => {\n        console.log(values);\n    }\n\n    return(\n        <div className={styles.loginContainer}>\n            <div className={styles.login}>\n                <Form \n                    form={form}\n                    onFinish={handleFinish}>\n                    {/* set the defaultActiveKey as 1, so the tab will be highlighted by default */}\n                    <Tabs defaultActiveKey=\"1\">\n                        <TabPane tab=\"Sign in with username\" key=\"1\">\n                            <InputItem \n                                name=\"username\"\n                                prefix={<UserOutlined style={{ color: '#1890ff' }}/>}\n                                placeholder=\"username\" size=\"large\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please enter username'\n                                    }\n                                ]}/>\n                            <InputItem \n                                name=\"password\"\n                                prefix={<LockTwoTone style={{ color: '#1890ff' }}/>}\n                                type=\"password\"\n                                placeholder=\"password\" size=\"large\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please enter password'\n                                    }\n                                ]}/> \n                        </TabPane>\n                        <TabPane tab=\"Sign in with mobile\" key=\"2\">\n                        <InputItem \n                                name=\"mobile\"\n                                prefix={<MobileTwoTone />}\n                                placeholder=\"mobile phone number\" size=\"large\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please enter mobile phone number'\n                                    }\n                                ]}/>\n                            <InputItem \n                                name=\"captcha\"\n                                prefix={<MailTwoTone />}\n                                placeholder=\"code received\" size=\"large\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please enter the code you received'\n                                    }\n                                ]}/>    \n                        </TabPane>\n                    </Tabs>\n                    <Row justify=\"space-between\">\n                            <Checkbox \n                                checked={autoLogin}\n                                onChange={(e) => setAutoLogin(e.target.checked)}>\n                                    Auto Login\n                            </Checkbox>\n                            <a href=\"#\">Forget password</a>\n                        </Row>   \n                    <SubmitButton>Sign in</SubmitButton>\n                </Form>\n                <div className={styles.other}>\n                    Other Login Ways\n                    <AlipayCircleOutlined className={styles.icon} />\n                    <TaobaoCircleOutlined className={styles.icon} />\n                    <WeiboCircleOutlined className={styles.icon} />\n                    <Link className={styles.register} to=\"/register\">\n                        Register\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Login;",["83","84"],"/Users/Jiayi/projects/React/personal-app/src/components/InputItem/index.js",["85","86"],"/Users/Jiayi/projects/React/personal-app/src/components/SubmitButton/index.js",[],"/Users/Jiayi/projects/React/personal-app/src/pages/Home/components/Articles/index.js",[],"/Users/Jiayi/projects/React/personal-app/src/pages/Home/components/Applications/index.js",["87","88","89"],"/Users/Jiayi/projects/React/personal-app/src/pages/Home/components/Projects/index.js",["90"],"/Users/Jiayi/projects/React/personal-app/src/pages/Home/data.js",[],"/Users/Jiayi/projects/React/personal-app/src/pages/Home/components/TagList/index.js",[],"/Users/Jiayi/projects/React/personal-app/src/pages/Home/components/ArticleListContent/index.js",[],"/Users/Jiayi/projects/React/personal-app/src/reducers/index.js",[],"/Users/Jiayi/projects/React/personal-app/src/utils/ajax.js",["91"],"/Users/Jiayi/projects/React/personal-app/src/constants/index.js",[],"/Users/Jiayi/projects/React/personal-app/src/utils/interceptors.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":8,"column":10,"nodeType":"98","messageId":"99","endLine":8,"endColumn":25},{"ruleId":"96","severity":1,"message":"100","line":9,"column":22,"nodeType":"98","messageId":"99","endLine":9,"endColumn":30},{"ruleId":"101","severity":1,"message":"102","line":78,"column":29,"nodeType":"103","endLine":78,"endColumn":41},{"ruleId":"92","replacedBy":"104"},{"ruleId":"94","replacedBy":"105"},{"ruleId":"96","severity":1,"message":"106","line":11,"column":12,"nodeType":"98","messageId":"99","endLine":11,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":35,"column":8,"nodeType":"109","endLine":35,"endColumn":24,"suggestions":"110"},{"ruleId":"101","severity":1,"message":"111","line":10,"column":13,"nodeType":"103","endLine":10,"endColumn":88},{"ruleId":"101","severity":1,"message":"111","line":15,"column":13,"nodeType":"103","endLine":15,"endColumn":88},{"ruleId":"101","severity":1,"message":"111","line":20,"column":13,"nodeType":"103","endLine":20,"endColumn":88},{"ruleId":"101","severity":1,"message":"111","line":17,"column":39,"nodeType":"103","endLine":17,"endColumn":42},{"ruleId":"112","severity":1,"message":"113","line":32,"column":1,"nodeType":"114","endLine":35,"endColumn":3},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'formatCountdown' is defined but never used.","Identifier","unusedVar","'register' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["115"],["116"],"'count' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.countDown'. Either include it or remove the dependency array. If 'setCount' needs the current value of 'props.countDown', you can also switch to useReducer instead of useState and read 'props.countDown' in the reducer.","ArrayExpression",["117"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},"Update the dependencies array to be: [isCountingDown, props.countDown]",{"range":"120","text":"121"},[1312,1328],"[isCountingDown, props.countDown]"]